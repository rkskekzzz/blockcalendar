name: Build_deploy
on:
    push:
        branches:
            - main #master 브랜치에 push 이벤트가 일어났을 때만 실행
        # paths:
        #- frontend/**
        # - backend/**
jobs:
    Build_deploy:
        runs-on: ubuntu-latest
        env:
            REPO: ${{ secrets.DOCKER_REPO }}
        steps:
            #master 브랜치로 체크아웃
            - name: 레포지토리 체크아웃
              uses: actions/checkout@v3

            - name: 환경변수 설정
              run: |
                  echo REACT_APP_APIKEY=${{ secrets.REACT_APP_APIKEY }} >> ./frontend/.env.production
                  echo REACT_APP_AUTHDOMAIN=${{ secrets.REACT_APP_AUTHDOMAIN }} >> ./frontend/.env.production
                  echo REACT_APP_PROJECTID=${{ secrets.REACT_APP_PROJECTID }} >> ./frontend/.env.production
                  echo REACT_APP_STORAGEBUCKET=${{ secrets.REACT_APP_STORAGEBUCKET }} >> ./frontend/.env.production
                  echo REACT_APP_MESSAGINGSENDERID=${{ secrets.REACT_APP_MESSAGINGSENDERID }} >> ./frontend/.env.production
                  echo REACT_APP_APPID=${{ secrets.REACT_APP_APPID }} >> ./frontend/.env.production
                  echo REACT_APP_MEASUREMENTID=${{ secrets.REACT_APP_MEASUREMENTID }} >> ./frontend/.env.production

            - name: build docker
              run: |
                  cd frontend
                  docker build . -t $REPO:${{ github.sha }}
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Publish Docker Image
              run: |
                  docker push $REPO:${{ github.sha }}
                  docker image tag $REPO:${{ github.sha }} $REPO
                  docker push $REPO

            - name: Back 노드 모듈 설치
              if: steps.node-module-cache.outputs.cache-hit != 'true'
              run: cd backend && npm install

            - name: Back 빌드하기
              run: cd backend && npm run build

            - name: Blockcalendar_build 레포지토리로 backend/build 배포
              uses: dmnemec/copy_file_to_another_repo_action@v1.1.1
              env:
                  API_TOKEN_GITHUB: ${{ secrets.ACCESS_TOKEN_FOR_REPO }}
              with:
                  source_file: './backend/build'
                  destination_repo: 'rkskekzzz/blockcalendar_build'
                  destination_branch: 'master'
                  destination_folder: './backend'
                  user_email: 'wkdlfflxh@naver.com'
                  user_name: 'rkskekzzz'
                  commit_message: 'Build: 백엔드'

            - name: Blockcalendar_build 레포지토리로 backend/node_modules 배포
              uses: dmnemec/copy_file_to_another_repo_action@v1.1.1
              env:
                  API_TOKEN_GITHUB: ${{ secrets.ACCESS_TOKEN_FOR_REPO }}
              with:
                  source_file: './backend/node_modules'
                  destination_repo: 'rkskekzzz/blockcalendar_build'
                  destination_branch: 'master'
                  destination_folder: './backend'
                  user_email: 'wkdlfflxh@naver.com'
                  user_name: 'rkskekzzz'
                  commit_message: 'Build: 백엔드'
